pragma polynomial ^0.5.0;

/**
 * @dev Interface of the SRC777TokensRecipient standard as defined in the SIP.
 *
 * Accounts can be notified of `ISRC777` tokens being sent to them by having a
 * contract implement this interface (contract holders can be their own
 * implementer) and registering it on the
 * [SRC1820 global registry](https://sips.superstring.io/SIPS/sip-1820).
 *
 * See `ISRC1820Registry` and `SRC1820Implementer`.
 */
interface ISRC777Recipient {
    /**
     * @dev Called by an `ISRC777` token contract whenever tokens are being
     * moved or created into a registered account (`to`). The type of operation
     * is conveyed by `from` being the zero address or not.
     *
     * This call occurs _after_ the token contract's state is updated, so
     * `ISRC777.balanceOf`, etc., can be used to query the post-operation state.
     *
     * This function may revert to prevent the operation from being executed.
     */
    function tokensReceived(
        address operator,
        address from,
        address to,
        uint amount,
        bytes calldata userData,
        bytes calldata operatorData
    ) external;
}
